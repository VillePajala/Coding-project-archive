[
  {
    "id": "0.1t3t6atyw2s",
    "otsikko": "OHJELMOINNIN JA MUSIIKIN TEORIA 30 SEKUNNISSA",
    "kirjoitus": "<p>El&auml;m&auml;ss&auml;ni on kaksi t&auml;rke&auml;&auml; harrastusta: ohjelmointi ja musiikki. N&auml;ist&auml; ensimm&auml;inen on minulle my&ouml;s ammatti. Aina v&auml;lill&auml; minulta kysyt&auml;&auml;n mit&auml; teen ty&ouml;kseni, mit&auml; ohjelmointi oikeastaan on. Olen p&auml;&auml;tynyt selitt&auml;m&auml;&auml;n t&auml;t&auml; musiikin kautta.</p><p>Joskus opettajani sanoi, ett&auml; ohjelmoinnin tarkoitus on saada tietokone toimimaan halutulla tavalla. T&auml;m&auml; on my&ouml;s musiikin tarkoitus, saada kappale toimimaan tietyll&auml; tavalla. Valitut instrumentit, eli valitut ohjelmointikielet, vaikuttavat lopputulokseen, eli kappaleeseen tai ohjelmaan. Kuten hyv&auml; musiikki, my&ouml;s hyv&auml; ohjelma vaatii luovuutta. Se vaatii luovuutta luojaltaan, valmiutta rikkoa rajoja, ajatella laatikon ulkopuolella, olla aina valmis uusiutumaan ja olemaan n&ouml;yr&auml;. Ohjelmointi vaatii sen tunnistamista, ett&auml; aina voisi olla viel&auml;kin parempi.</p><p>Instrumentit valitaan k&auml;ytt&ouml;tarkoituksen mukaan. Mik&auml;li halutaan tietynlaiseen ymp&auml;rist&ouml;&ouml;n sopiva kappale, sen instrumenteiksi ei ole j&auml;rkev&auml;&auml; valita toisen lajityypin soittimia. Monet klassisen musiikin yst&auml;v&auml;t eiv&auml;t varmasti arvostaisi s&auml;hk&ouml;kitaroita ja haitareita konserttisalissa aivan kuten Microsoftin Enterprise-j&auml;rjestelmien k&auml;ytt&auml;j&auml;t eiv&auml;t v&auml;ltt&auml;m&auml;tt&auml; arvosta Linux-pohjaisia ohjelmistoratkaisuja. Tietyt asiat eiv&auml;t vain sovi yhteen.</p><p><strong>Tuottajaa tarvitaan</strong></p><p>Musiikki vaatii my&ouml;s kapellimestarin ja tuottajan, jonkun joka varmistaa, ett&auml; lopputulos vastaa odotuksia. Meill&auml; heid&auml;t tunnetaan projektip&auml;&auml;llikk&ouml;in&auml;. Harva muusikko voi tehd&auml; musiikkia vain itselleen ja t&auml;ysin omilla ehdoillaan. Taiteilijalla on aina rajoitteita, joko levy-yhti&ouml;n asettamia tai muita taloudellisia realiteetteja. Musiikki on bisnest&auml;, tietyt tuotteet myyv&auml;t ja niit&auml; voidaan r&auml;&auml;t&auml;l&ouml;id&auml; tietyille kohderyhmille. T&auml;m&auml;k&auml;&auml;n ei ole kovin kaukana ohjelmistoalasta, jossa asiakas on se kuuntelija, se joka sen levyn maksaa ja tuo leiv&auml;n p&ouml;yt&auml;&auml;n. Yritys on siis ohjelmoijan levy-yhti&ouml;, projektip&auml;&auml;llik&ouml;t levyn tuottajia &ndash; ja ohjelmoijat ehk&auml; studiomuusikoita ja taiteilijoita.</p><p>N&auml;pp&auml;imist&ouml; on ohjelmoijan instrumentti. Meid&auml;n ei tarvitse viritt&auml;&auml; kitaran kieli&auml;, vaan viritt&auml;&auml; aivot, p&auml;&auml;st&auml; flow-tilaan, sulkea ulkomaailma pois ja edet&auml; kohti p&auml;&auml;m&auml;&auml;r&auml;&auml;. Ensin tehd&auml;&auml;n runko, jonka p&auml;&auml;lle voidaan rakentaa perusrytmi. Mik&auml;li musiikissa kertos&auml;ett&auml; toistaa liikaa, siihen turtuu, kappaleesta tulee raskas, sen kuuntelu on vaivalloista ja sit&auml; ei halua en&auml;&auml; kuunnella. Sama p&auml;tee ohjelman rakenteessa. Monimutkaiset, monipuoliset teokset vaativat musiikissa ja ohjelmoinnissa useamman kerran, jotta niihin p&auml;&auml;see sis&auml;lle.</p><p><strong>Nerokkuus n&auml;kyy pieniss&auml; asioissa</strong></p><p>Muusikoiden tapaan ohjelmoijatkin j&auml;tt&auml;v&auml;t ty&ouml;h&ouml;n j&auml;lkens&auml;. Muistatko itse hetken kun olet musiikkia kuunnellessa ajatellut: &quot;briljanttia&quot;, &quot;nerokasta&quot; tai &quot;aivan!&quot;? Vai kuulutko ryhm&auml;&auml;n, joka kuuntelee musiikkinsa sellaisenaan, sit&auml; sen tarkemmin analysoimatta ja vain kokonaisuudesta nauttien? Itse kuulun musiikkia kuunnellessa ja ohjelmakoodia lukiessa ensin mainittuun ryhm&auml;&auml;n. En voi kuunnella musiikkia analysoimatta sen soittimia, nyansseja, niit&auml; pieni&auml; asioita, jotka tekev&auml;t siit&auml; nerokasta.</p><p>Ohjelmakoodia lukiessa en voi my&ouml;sk&auml;&auml;n olla arvostelematta toteutustapaa, nerokkuutta (tai usein sen puutetta) tai muita asioita, jotka tekev&auml;t ohjelmasta sellaisen kun se on. On vaikea k&auml;ytt&auml;&auml; ohjelmia miettim&auml;tt&auml; miksi se toimii n&auml;in ja miten t&auml;m&auml; on tehty. Tieto voi lis&auml;t&auml; tuskaa, mutta usein se my&ouml;s lis&auml;&auml; arvostusta ohjelman tekij&ouml;iden lahjakkuutta, luovuutta ja ty&ouml;moraalia kohtaan.</p><p>L&auml;hde:&nbsp;<a href=\"https://www.anders.fi/fi/blogi/ohjelmoinnin-ja-musiikin-teoria/\">https://www.anders.fi/fi/blogi/ohjelmoinnin-ja-musiikin-teoria/</a></p>",
    "kirjoittaja": "Ville Pajala",
    "aikaleima": 1543914205947,
    "tykkaykset": 2,
    "erimielet": 2
  },
  {
    "id": "0.gwbu2lch63i",
    "otsikko": "5 SYYTÄ: MIKSI KANNATTAA OPETELLA OHJELMOINTIA?",
    "kirjoitus": "<p><strong>Ohjelmoinnin osaamisen tarpeellisuudesta kohkataan, mutta miksi tavallisen ihmisen pit&auml;isi osata koodata? T&auml;ss&auml; viisi hyv&auml;&auml; syyt&auml;.</strong></p><p><strong>1. Ohjelmointi on yh&auml; enemm&auml;n osa arkea</strong></p><p>Digitaalisuus on tulevaisuudessa yh&auml; kokonaisvaltaisemmin osa el&auml;m&auml;&auml;. Se tulee vanhoillekin toimialoille, kuten sairaanhoitoon ja ruokakauppoihin. Kaikkien ei tarvitse olla ammattikoodareita, mutta mit&auml; enemm&auml;n ohjelmointi vaikuttaa ihmisten el&auml;m&auml;&auml;n, sit&auml; t&auml;rke&auml;mp&auml;&auml; on ainakin ymm&auml;rt&auml;&auml;, mist&auml; on kyse. Ymm&auml;rt&auml;minen helpottaa tulevaisuuden maailmassa toimimista.</p><p><strong>2. Ohjelmointia osaava voi kehitt&auml;&auml; ty&ouml;el&auml;m&auml;&auml; ja palveluita</strong></p><p>Voi hyvin olla, ett&auml; tulevaisuudessa ihmiset siirtyv&auml;t yh&auml; enemm&auml;n digitaalisten palveluiden luomiseen niiden kuluttamisen sijaan. Ehk&auml; my&ouml;s yritykset ottavat ohjelmoinnista innostuneita kuluttajia mukaan luomaan uusia ja kehitt&auml;m&auml;&auml;n vanhoja digitaalisia palveluita, jolloin niist&auml; tulee k&auml;ytt&auml;jien kannalta parempia.<br />Ohjelmointi on yksinkertaisimmillaan k&auml;skyjen antamista tietokoneelle. Jos esimerkiksi potilastietoj&auml;rjestelm&auml;&auml; k&auml;ytt&auml;v&auml; sairaanhoitaja tai ajanvarausta tekev&auml; potilas ymm&auml;rt&auml;&auml; j&auml;rjestelm&auml;n toimintalogiikkaa, h&auml;n pystyy my&ouml;s kehitt&auml;m&auml;&auml;n sit&auml;.<br />Ohjelmistojen hankinnasta vastuussa olevat ty&ouml;ntekij&auml;t puolestaan pystyv&auml;t vertaamaan helpommin kustannuksia ja hy&ouml;tyj&auml;, kun he ymm&auml;rt&auml;v&auml;t, miten ohjelma syntyy.</p><p><strong>3. Ohjelmointi on tulevaisuuden kirjoitustaitoa</strong></p><p>Ohjelmointia alettiin opettaa peruskoulussa syksyll&auml; 2016. Se ei tee kaikista lapsista ohjelmoijia tai pelintekij&ouml;it&auml; sen enemp&auml;&auml; kuin biologian opiskeleminen tekee tunneilla istuneista biologeja.<br />Jokaisen on kuitenkin t&auml;rke&auml; ymm&auml;rt&auml;&auml;, mihin kaikkeen ohjelmoinnilla voi pysty&auml;. Lapset tulevat esimerkiksi tekem&auml;&auml;n itse pelej&auml; ja luomaan k&auml;ytt&ouml;liittymi&auml;. Tulevaisuuden ty&ouml;el&auml;m&auml;ss&auml; ohjelmointitaito nousee todenn&auml;k&ouml;isesti yht&auml; t&auml;rke&auml;ksi osaksi yleissivistyst&auml; kuin luku- ja kirjoitustaito. Jos vanhemmat tutustuvat digimaailman kieleen yhdess&auml; lasten kanssa, se auttaa ymm&auml;rt&auml;m&auml;&auml;n lasten maailmaa paremmin.</p><p><strong>4. Ohjelmointi on luovaa ongelmanratkaisua</strong></p><p>Ohjelmointi on luovaa ongelmanratkaisua, jossa isoja ongelmia pilkotaan pieniksi ja etsit&auml;&auml;n tietoa. Pelk&auml;n n&auml;pp&auml;imist&ouml;n ja oman ymm&auml;rryksen avulla voi rakentaa asioita.<br />Ohjelmoinnissa tarvitaan ensisijaisesti loogista ajattelukyky&auml; vaikeiden matemaattisten mallien sijaan: plus-miinus- ja joko-tai-ajattelun perustaidoilla voi jo rakentaa pieni&auml; arjen ongelmia ratkovia ohjelmia.<br />Esimerkiksi jos taloyhti&ouml;n pyykkituvan sein&auml;ll&auml; oleva varauslista ei tunnu en&auml;&auml; toimivalta, voisiko nettiin ohjelmoida varaussovelluksen?</p><p><br /><strong>5. Ohjelmoinnin osaajilla on valtaa</strong></p><p>Mit&auml; useampi ihminen innostuu ohjelmoinnista, sit&auml; monimuotoisempia ideoita ja kehitysehdotuksia digitaaliseen maailmaan tulee. Koodaus on pitk&auml;&auml;n ollut nuorten miesten alaa, mutta kun naiset alkavat koodata enemm&auml;n, j&auml;rjestelmiin voi tulla uudenlaisia l&auml;hestymistapoja. Maailma muuttuu demokraattisemmaksi, kun yh&auml; useampi ihminen osaa ohjelmoida.</p><p>&nbsp;</p><p>L&auml;hde:&nbsp;<a href=\"https://yksityisille.hub.elisa.fi/miksi-opetella-ohjelmointia/\">https://yksityisille.hub.elisa.fi/miksi-opetella-ohjelmointia/</a></p>",
    "kirjoittaja": "Ville Pajala",
    "aikaleima": 1543913853117,
    "tykkaykset": 0,
    "erimielet": 0
  },
  {
    "id": "0.b0ysjjlpvon",
    "otsikko": "VIISI HARHAKÄSITYSTÄ KOODAAMISESTA",
    "kirjoitus": "<p>Ohjelmoinnista puhutaan nyky&auml;&auml;n paljon, ja iso osa ihmisist&auml; oppii sen pohjana olevan loogisen ajattelun alkeet jo peruskoulussa. Harhak&auml;sitykset el&auml;v&auml;t kuitenkin edelleen sitke&auml;ss&auml;. Korjaan t&auml;ss&auml; artikkelissa muutamia toisinaan kuultuja v&auml;itteit&auml; ohjelmoinnista ja IT-alasta. Toivottavasti t&auml;m&auml; blogautus saa sinutkin harkitsemaan suuntautumista alalle.</p><p><strong>1. &ldquo;Ohjelmointiura pit&auml;&auml; aloittaa jo lapsena&rdquo;</strong></p><p>Koskaan ei ole liian my&ouml;h&auml;ist&auml; aloittaa ohjelmoinnin opettelu. Lapset ovat monesti luonnostaan uteliaita ja ennakkoluulottomia kokeilemaan uusia asioita, mutta t&auml;m&auml;n innostumisen ja oppimishalun ei tarvitse kadota vuosien saatossa. Ohjelmoinnin perusteet voi&nbsp;<strong>opetella</strong>kuka tahansa. Alan huippuammattilaiseksi tuleminen ja sellaisena pysyminen vaatii kuitenkin jatkuvaa harjoittelua, aloittipa ohjelmoinnin miss&auml; i&auml;ss&auml; tahansa.</p><p>Monen nykyp&auml;iv&auml;n ammattilaisen ura on aikanaan alkanut siten, ett&auml; perheeseen on ostettu tietokone, jota on kiinnostuneena tutkittu ja purettu osiin. On kuitenkin syyt&auml; muistaa, ett&auml; suuri osa niist&auml;, jotka ovat lapsena olleet kiinnostuneita tietokoneista, ei p&auml;&auml;dy IT-alalle &ndash; ja vastaavasti suuri osa IT-alalla ty&ouml;skentelevist&auml; on lapsena puuhaillut jonkin muun harrastuksen parissa. Mit&auml;&auml;n peruuttamatonta ei siis ole viel&auml; p&auml;&auml;ssyt tapahtumaan, jos partio tai postimerkit kiinnostivatkin lapsena enemm&auml;n. Jopa t&auml;m&auml;n blogautuksen kirjoittaja oli nuorena vahvasti suuntautumassa musiikkialalle, mutta aikuisena ohjelmointi veikin menness&auml;&auml;n.</p><p><strong>2. &ldquo;Koodaus vaatii pitk&auml;&auml; matematiikkaa&rdquo;</strong></p><p>Tietokoneohjelmointi vaatii enemm&auml;n loogista ajattelukyky&auml; kuin kyky&auml; vaikkapa derivoida tai integroida. Tietyill&auml; ohjelmoinnin osa-alueilla matemaattisesta osaamisesta on kyll&auml; hy&ouml;ty&auml;, ja esimerkiksi grafiikkaohjelmointi vaatii jo hyvinkin syv&auml;llist&auml; matematiikan hallintaa. N&auml;m&auml; ovat kuitenkin erityisalueita, jotka edustavat vain hyvin pient&auml; osaa ohjelmoinnin koko kirjosta.</p><p>Valtaosa ohjelmointia p&auml;ivitt&auml;in ty&ouml;kseen tekevist&auml; ei siis painiskele matemaattisten vaan loogisten haasteiden parissa. Ehtolauseet ja erilaiset tietorakenteet eiv&auml;t niink&auml;&auml;n kuulu matematiikan vaan tietojenk&auml;sittelytieteen kursseihin. Niit&auml; voi kuitenkin mainiosti opiskella my&ouml;s oma-aloitteisesti.</p><p><strong>3. &ldquo;Hyv&auml;ksi ohjelmoijaksi tullaan vain valmistumalla huippuyliopistosta&rdquo;</strong></p><p>Yliopistojen tietojenk&auml;sittelytieteiden kurssit ovat loistava keino kehitty&auml; ohjelmoijana, ja t&auml;t&auml; reitti&auml; moni ohjelmoija p&auml;&auml;tyykin t&ouml;ihin. Moni hakija l&auml;hett&auml;&auml; mielell&auml;&auml;n saatekirjeess&auml;&auml;n koulutodistuksensa ja kurssisuoritusotteen. Koodausta kannattaa kuitenkin ajatella samanlaisena k&auml;sity&ouml;ammattina kuin vaikkapa puusep&auml;n ammattia: teoreettinen tiet&auml;mys on loppujen lopuksi sekund&auml;&auml;rist&auml;, ja vain konkreettisella lopputuloksella on v&auml;li&auml;.</p><p>T&auml;st&auml; syyst&auml; IT-alalla ei tyypillisesti vaadita tai katsota koulutodistuksia rekrytointivaiheessa, eik&auml; niill&auml; k&auml;yt&auml;nn&ouml;n ty&ouml;n kannalta ole merkityst&auml;. Reaktorilla on t&ouml;iss&auml; niin tohtoreita, maistereita, AMK-insin&ouml;&ouml;rej&auml;, ylioppilaita kuin lukion keskeytt&auml;neit&auml;kin. Kaikkia heit&auml; yhdist&auml;&auml; kiinnostus ja halu kirjoittaa kaunista ja toimivaa koodia.</p><p><strong>4. &ldquo;Ohjelmointi on suurit&ouml;ist&auml;&rdquo;</strong></p><p>Talousuutisten tyypillisiss&auml; otsikoissa kymmeni&auml; tai jopa satoja miljoonia maksavat ohjelmistohankkeet ajautuvat karille tai venyv&auml;t vuosia. T&auml;st&auml; voi helposti saada k&auml;sityksen, ett&auml; ohjelmointi on jotakin sellaista, mik&auml; vaatii satojen ihmisten t&auml;ysip&auml;iv&auml;isen panostuksen.</p><p>N&auml;in ei kuitenkaan tarvitse olla. J&auml;rjestelmien ei tarvitse olla suuria ollakseen hy&ouml;dyllisi&auml;. P&auml;ivitt&auml;in toistuvien ty&ouml;teht&auml;vien helpottaminen tai jopa automatisointi on eritt&auml;in tehokas tapa parantaa omaa ty&ouml;t&auml;&auml;n. Minuutin p&auml;ivitt&auml;isest&auml; ajans&auml;&auml;st&ouml;st&auml; kertyy viiden vuoden aikana kokonainen vuorokausi (l&auml;hde:&nbsp;<a href=\"https://xkcd.com/1205/\">https://xkcd.com/1205/</a>), ja t&auml;t&auml; helpottavien pienten apuv&auml;lineiden tekeminen IFTTT:n tai Zapierin kaltaisilla ty&ouml;kaluilla on yksinkertaista. Ohjelmointi on joillekin ihmisille ammatti, mutta se voi olla kaikille apuv&auml;line arjen sujuvoittamiseen.</p><p><strong>5. &ldquo;Ohjelmointi on yksin&auml;isten n&ouml;rttien puuhaa&rdquo;</strong></p><p>Kammiossaan &ouml;isin puurtava Lisbeth Salander tai introvertti&nbsp;n&ouml;rttipoika on yksi Hollywoodin yleisimmist&auml; kliseist&auml;. T&auml;m&auml; harhakuva s&auml;ilyy yll&auml;tt&auml;v&auml;n muuttumattomana vuodesta toiseen, vaikka todellisuus on t&auml;ysin p&auml;invastainen: ohjelmointi on p&auml;&auml;s&auml;&auml;nt&ouml;isesti tiimity&ouml;skentely&auml;. Hal Abelsonin, MIT-yliopiston tietojenk&auml;sittelytieteen professorin, kuuluisa lausahdus kuuluukin: &ldquo;tietokoneohjelmat pit&auml;&auml; kirjoittaa ihmisten luettaviksi ja vain toisinaan tietokoneen ajettaviksi&rdquo;.</p><p>Jo muutama vuosikymmen takaperin ohjelmointikirjat ja -lehdet olivat haluttua tavaraa kirjastoissa, ja internetin kehitys on tuonut ohjelmoijia yh&auml; l&auml;hemm&auml;s toisiaan. Yli 20 miljoonan k&auml;ytt&auml;j&auml;n&nbsp;<a href=\"https://github.com/\">Github.com</a>&nbsp;on esimerkki palvelusta, jonka kautta ohjelmoijien on helppo vaihtaa ajatuksia, tehd&auml; yhteisty&ouml;t&auml; ja versioida koodia. My&ouml;s esimerkiksi Hackathon-kilpailut kokoavat yhteen muutaman hengen tiimej&auml;, jotka ratkovat kilpaa erilaisia haasteita ohjelmoinnin avulla.</p>",
    "kirjoittaja": "Ville Pajala",
    "aikaleima": 1543913504943,
    "tykkaykset": 0,
    "erimielet": 0
  }
]